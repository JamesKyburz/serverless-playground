service: sqs-stack

frameworkVersion: ^2.15.0

package:
  individually: true

plugins:
  - serverless-offline
  - serverless-offline-sqs
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256
  logRetentionInDays: 5
  #tracing:
  #  lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: '*'
  #tags:
  #  commit: '${env:COMMIT_ID}'

custom:
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://0.0.0.0:9324
    region: us-east-1
    accessKeyId: x
    secretAccessKey: x
    skipCacheInvalidation: false

functions:
  sqs:
    handler: index.sqs
    timeout: 6
    memorySize: 128
    events:
      - sqs:
           arn:
             Fn::GetAtt:
               - Q
               - Arn
           enabled: true
           batchSize: 10
    iamRoleStatementsName: ${self:service.name}-${self:provider.stage}-sqs
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sqs:ReceiveMessage
          - sqs:DeleteMessage*
          - sqs:GetQueue*
        Resource:
          - "arn:#{AWS::Partition}:sqs:#{AWS::Region}:#{AWS::AccountId}:q"

resources:
  Resources:
    Q:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "q"
        VisibilityTimeout: 100
